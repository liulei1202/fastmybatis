<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="common">

	<sql id="orderBy">
		<if test="query.orderable">
			ORDER BY ${query.order}
		</if>
	</sql>
	<sql id="limit">
		<if test="!query.isQueryAll">
			LIMIT #{query.start},#{query.limit}
		</if>
	</sql>
	
	<sql id="join">
	   <if test="query.joinExpressions!=null">
            <foreach collection="query.joinExpressions" item="joinExpressionsItem">
                ${joinExpressionsItem.joinSql}
            </foreach>
        </if>
	</sql>
	<sql id="condition">
	   <if test="query.valueExpressions!=null">
           <foreach collection="query.valueExpressions" item="valueExpressionsItem">
               <if test="valueExpressionsItem.value != null">
                   ${valueExpressionsItem.joint}
                   ${valueExpressionsItem.column}
                   ${valueExpressionsItem.equal}
                   #{valueExpressionsItem.value}
               </if>
           </foreach>
       </if>
       <if test="query.listExpressions!=null">
           <foreach collection="query.listExpressions" item="listExpressionsItem">
               <if test="listExpressionsItem.value.size>0">
                   ${listExpressionsItem.joint}
                   ${listExpressionsItem.column}
                   ${listExpressionsItem.equal}
                   <foreach collection="listExpressionsItem.value" item="value" open="("
                       separator="," close=")">
                       #{value}
                   </foreach>
               </if>
           </foreach>
       </if>
       <if test="query.sqlExpressions!=null">
           <foreach collection="query.sqlExpressions" item="sqlExpressionsItem">
               ${sqlExpressionsItem.joint} 
               (${sqlExpressionsItem.sql})
           </foreach>
       </if>
	</sql>

	<!-- 条件语句块 -->
	<sql id="where">
		<include refid="common.join" />
		<where>
 			<include refid="common.condition" />
		</where>
	</sql>
	
	<sql id="all">
	    <include refid="common.where" />
        <include refid="common.orderBy" />
        <include refid="common.limit" />
	</sql>
	
	<sql id="updateWhere">
		<if test="query.joinExpressions!=null">
			<foreach collection="query.joinExpressions" item="joinExpressionsItem">
				${joinExpressionsItem.joinSql}
			</foreach>
		</if>
		<where>
			<if test="query.valueExpressions!=null">
				<foreach collection="query.valueExpressions" item="valueExpressionsItem">
					<if test="valueExpressionsItem.value != null">
						${valueExpressionsItem.joint}
						${valueExpressionsItem.column}
						${valueExpressionsItem.equal}
						#{valueExpressionsItem.value}
					</if>
				</foreach>
			</if>
			<if test="query.listExpressions!=null">
				<foreach collection="query.listExpressions" item="listExpressionsItem">
					<if test="listExpressionsItem.value.size>0">
						${listExpressionsItem.joint}
						${listExpressionsItem.column}
						${listExpressionsItem.equal}
						<foreach collection="listExpressionsItem.value" item="value"
							open="(" separator="," close=")">
							#{value}
						</foreach>
					</if>
				</foreach>
			</if>
			<if test="query.sqlExpressions!=null">
				<foreach collection="query.sqlExpressions" item="sqlExpressionsItem">
					${sqlExpressionsItem.joint}
					(${sqlExpressionsItem.sql})
				</foreach>
			</if>
		</where>
	</sql>
	
</mapper>
